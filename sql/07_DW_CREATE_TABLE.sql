USE DB6034059


DROP TABLE IF EXISTS FACT_OVERVIEW
DROP TABLE IF EXISTS DIM_PRODUCT
DROP TABLE IF EXISTS FLAKE_PRODUCT_CATEGORY
DROP TABLE IF EXISTS DIM_CUSTOMERORDER
DROP TABLE IF EXISTS DIM_CUSTOMER
DROP TABLE IF EXISTS FLAKE_SHIPPING_METHOD
DROP TABLE IF EXISTS FLAKE_PAYMENT_METHOD
DROP TABLE IF EXISTS DIM_TIME

--========================================================================
-- Anlegen der Tabelle FLAKE_PRODUCT_CATEGORY
CREATE TABLE FLAKE_PRODUCT_CATEGORY(
	CATEGORY_ID				VARCHAR(5)		NOT NULL,
	CATEGORY_NAME			VARCHAR(30)		NOT NULL,
	CATEGORY_DESCRIPTION	VARCHAR(500)	NULL,
	PROZENTUALLE_MARGE		MONEY			NOT NULL,
	UMSATZSTEUER_ANTEIL		MONEY			NOT NULL,
	CONSTRAINT PK_FLAKE_PRODUCT_CATEGORY PRIMARY KEY (CATEGORY_ID)

);

--==========================================================================
--Anlegen der Tabelle FLAKE_SHIPPING_METHOD
CREATE TABLE FLAKE_SHIPPING_METHOD
(
	SHIPPING_METHOD_ID			VARCHAR(5)		NOT NULL,
	SHIPPING_METHOD_DESCRIPTION	VARCHAR(30)		NOT NULL,
	SHIPPING_FEE				MONEY			NOT NULL,
	CONSTRAINT PK_FLAKE_SHIPPING_METHOD PRIMARY KEY (SHIPPING_METHOD_ID)
);

--==========================================================================
--Anlegen der Tabelle FLAKE_PAYMENT_METHOD

CREATE TABLE FLAKE_PAYMENT_METHOD
(
	PAYMENT_METHOD_ID		VARCHAR(5)		NOT NULL,
	PAYMENT_DESCRIPTION		VARCHAR(30)		NOT NULL,
	CONSTRAINT PK_FLAKE_PAYMENT_METHOD PRIMARY KEY (PAYMENT_METHOD_ID)
);


--==========================================================================
--Anlegen der Tabelle DIM_PRODUCT

CREATE TABLE DIM_PRODUCT(

	PRODUCT_ID						INT				NOT NULL,
	PRODUCT_NAME					VARCHAR(100)	NOT NULL,
	PRODUCT_DESCRIPTION				VARCHAR(500)	NULL,
	CATEGORY_ID						VARCHAR(5)		NOT NULL
			REFERENCES FLAKE_PRODUCT_CATEGORY (CATEGORY_ID),
	MANUFACTURER					VARCHAR(50)		NULL,
	PRODUCT_LENGTH					FLOAT			NULL,
	PRODUCT_WIDTH					FLOAT			NULL,
	PRODUCT_HEIGHT					FLOAT			NULL,
	PRODUCT_WEIGHT					FLOAT			NULL,
	PRODUKT_BRUTTO_PREIS			MONEY			NOT NULL,
	PRODUKT_NETTO_PREIS				MONEY			NOT NULL,
	ERZIELTE_GEWINN_PRO_PRODUKT		MONEY			NOT NULL,
	CONSTRAINT PK_DIM_PRODUCT PRIMARY KEY (PRODUCT_ID)


);


--==========================================================================
--Anlegen der Tabelle DIM_CUSTOMER

CREATE TABLE DIM_CUSTOMER(
	CUSTOMER_ID		INT				NOT NULL,
	LASTNAME		VARCHAR(30)		NOT NULL,
	FIRSTNAME		VARCHAR(30)		NOT NULL,
	GENDER			CHAR(1)			NOT NULL	CHECK(GENDER = 'M' OR GENDER = 'W' OR GENDER = 'D'),
	DATE_OF_BIRTH	DATETIME		NOT NULL,
	STREET			VARCHAR(30)		NOT NULL,
	POSTCODE		VARCHAR(5)		NOT NULL,
	CITY			VARCHAR(30)		NOT NULL,
	EMAIL			VARCHAR(30)		NOT NULL,
	CONSTRAINT PK_DIM_CUSTOMER PRIMARY KEY (CUSTOMER_ID)

);


--==========================================================================
--Anlegen der Tabelle DIM_CUSTOMERORDER

CREATE TABLE DIM_CUSTOMERORDER (
	ORDER_ID				INT				NOT NULL,
	CUSTOMER_ID				INT				NOT NULL,
	ORDER_DATE				DATETIME		NOT NULL,
	SHIPPING_METHOD_ID		VARCHAR(5)		NOT NULL
		REFERENCES FLAKE_SHIPPING_METHOD (SHIPPING_METHOD_ID),
	PAYMENT_METHOD_ID		VARCHAR(5)		NOT NULL
		REFERENCES FLAKE_PAYMENT_METHOD (PAYMENT_METHOD_ID),
	NOTE					VARCHAR(250)	NULL,
	TOTAL_PRICE				MONEY			NOT NULL,
	CONSTRAINT PK_DIM_ORDER PRIMARY KEY (ORDER_ID)
);


--==========================================================================
--Anlegen der Tabelle DIM_TIME

CREATE TABLE DIM_TIME (
	ZEITNUMMER		INT IDENTITY (1 ,1) NOT NULL,
	DATUM			DATE				NOT NULL,
	MONAT			INT					NOT NULL,
	QUARTAL			INT					NOT NULL,
	JAHR			INT					NOT NULL
  CONSTRAINT PK_DIM_TIME PRIMARY KEY (ZEITNUMMER)
);

CREATE UNIQUE INDEX IU_DIM_TIME ON DIM_TIME (DATUM , MONAT , QUARTAL , JAHR)


--==========================================================================
--Anlegen der Tabelle FACT_OVERVIEW

CREATE TABLE FACT_OVERVIEW (
	CUSTOMER_ID			INT				NOT NULL REFERENCES DIM_CUSTOMER(CUSTOMER_ID),
	PRODUCT_ID			INT				NOT NULL REFERENCES DIM_PRODUCT(PRODUCT_ID),
	ORDER_ID			INT				NOT NULL REFERENCES DIM_CUSTOMERORDER(ORDER_ID),
	ZEITNUMMER			INT				NOT NULL REFERENCES DIM_TIME(ZEITNUMMER),
	QUANTITY			INT				NOT NULL,
	UMSATZ				MONEY			NOT NULL,
	GEWINN				MONEY			NOT NULL,
	ANZAHL_RETOURNIERT	INT				NOT NULL,
	ANZAHL_STORNIERT	INT				NOT NULL
	
   CONSTRAINT PK_FACT_OVERVIEW PRIMARY KEY (CUSTOMER_ID, PRODUCT_ID, ORDER_ID, ZEITNUMMER)

);



-- Rechtevergabe für die Tabellen, damit angemeldete
-- Benutzer Tabelleinhalte abfragen koennen.
-- Achtung: Hier werden Rechte an alle DB-Users vergeben und nicht nur z.B. Leserrecht oder Schreibrecht

GRANT SELECT ON FACT_OVERVIEW			TO PUBLIC;
GRANT SELECT ON FLAKE_PRODUCT_CATEGORY	TO PUBLIC;
GRANT SELECT ON FLAKE_SHIPPING_METHOD	TO PUBLIC;
GRANT SELECT ON FLAKE_PAYMENT_METHOD	TO PUBLIC;
GRANT SELECT ON DIM_PRODUCT				TO PUBLIC;
GRANT SELECT ON DIM_CUSTOMERORDER		TO PUBLIC;
GRANT SELECT ON DIM_CUSTOMER			TO PUBLIC;
GRANT SELECT ON DIM_ORDER_ITEM_STATUS	TO PUBLIC;
GRANT SELECT ON DIM_TIME				TO PUBLIC;


-- Sie müssen Gueste in Ihrer Datenbank zulassen, wenn die DBIS-Beispielprogramme genutzt werden sollen:
EXECUTE sp_grantdbaccess guest;



